#lang racket

;; http://projecteuler.net/problem=2

;; Each new term in the Fibonacci sequence is generated by adding the
;; previous two terms. By starting with 1 and 2, the first 10 terms
;; will be:

;; 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

;; By considering the terms in the Fibonacci sequence whose values do
;; not exceed four million, find the sum of the even-valued terms.

(require threading)

;; Define a fibonnaci function
(define (fib n)
  (cond [(= n 0) 1]
        [(= n 1) 1]
        [else (+ (fib (- n 1))
                 (fib (- n 2)))]))

;; Define a list with fibonacci numbers less then 4 mio
(define fibs
  (for/list ([n (in-naturals)]
             #:break (>= (fib n) 4000000))
    (fib n)))

;; Filter even and sum up
(~>> fibs
     (filter even?)
     (foldr + 0))
